public with sharing class WeekFiveHomework {
	
	public static void soqlPractice () {

		//1. Below is a SOQL query that should be returning the top 5 Accounts in our org based on Annual Revenue.  
		//Something's not quite right, can you fix the query?
		List < Account > topFiveAccounts = [SELECT ID, Name, AnnualRevenue 
                                            FROM Account 
                                            WHERE AnnualRevenue !=0 AND AnnualRevenue != NULL
                                            ORDER BY AnnualRevenue DESC NULLS LAST
                                            LIMIT 5];
		// print the results to the debug log
		system.debug('This should be 5: '+topFiveAccounts.size());


		//2. Here is a query that is missing something.  It compiles, but if you try and run this method in Anonymous
		//you'll get an error when the method tries to use the query results.  Fix it! :)
		// the query needs to 'get' all the fields you want to use - originally LastName was omitted
		// also add Id jic
		List < Contact > contacts = [SELECT Id, FirstName, LastName, MailingState FROM Contact LIMIT 10];

		for (Contact c: contacts) {
			String name = c.FirstName + ' ' + c.LastName;
        /* print results to the debug log. Expect 10
         
        System.debug('This is the size of my contact list: ' + contacts.size());
        System.debug('These are the results of my contact list..' + contacts);

        Printing to the debug log inside the loop printed one value, 10 times
        comment out old code for reference and print outside the loop for best results :|
		*/
		}

        System.debug('This is the size of my contact list: ' + contacts.size());
        System.debug('These are the results of my contact list..' + contacts);


		//3.  Can you write a SOQL query from scratch that will return the top 10 Accounts in the org, ordered by annual
		//revenue in decending order?  Print your results in the debug log.
		// Make a list of the top accounts in my org
		List < Account > topRatedAccounts = [SELECT Id, Name, AnnualRevenue, NumberOfEmployees, BillingCountry
                                             FROM Account
                                             WHERE AnnualRevenue != 0 AND AnnualRevenue != NULL
                                             ORDER BY AnnualRevenue DESC
                                             LIMIT 10];
        // Print the size of the list and the results to the debug log
        
        System.debug('This is the size of the list ' + topRatedAccounts.size());
        System.debug('These are the results in the list ' + topRatedAccounts);


		//4.  Can you write a SOQL query that will return all opportunities for all accounts in the topFiveAccounts list that we used
		//in Number 1?  (topFiveAccounts) Hint:  If you're stuck, look back a the code in WeekFiveClassExercises, getOpenOppsForHotAccounts method
		//  Print your results in the debug log.
        
        List < Opportunity > topAccountOpps = [SELECT Id, Amount, StageName 
                                               FROM Opportunity
                                               WHERE AccountId IN : topFiveAccounts];
        
        system.debug('these are all the opps of the top accounts: ' + topAccountOpps);
        

	}

	public static void forTheLoveOfForLoops () {

		//1. Take a look at the list and loop below.  It's commented out since it can't run as is. 
		// Can you replace the ?? with the number that makes sense based on the comments?
		// Remove the slashes and compile.
		// Can you add an extra counter variable so that you can print out how many times the loop ran in total?


		//This loop should run 5 times
		for (Integer i=0; i<5; i++) {
			system.debug('i is now: '+i);
		}


		//2.  Below is a loop that iterates through a list.  Can you change it to use the new For Loop syntax?  It should print out 
		//each account name in the debug log when you're done.
		//Use the list size to tell you how many loops, and use indexing to fetch values.  If you need help, check the 
		//loopingThroughLists method in WeekFiveClassExercises for hints

		List < Account > accountList = [SELECT ID, Name FROM Account LIMIT 5];

		// for (Account a: accountList) {
		//	system.debug('Account Name: '+a.name);
		//}
        
        for (integer i=0 ; i < accountList.size(); i++) {
            system.debug('account position ' + i + ' and accountID at ' + accountList[i].Id);
            
        }


	}



}
