public with sharing class WeekFourHomework {
	

	public static void setsReview(){

		//Your assignment: Play with Sets!

		// 1.  Create a set of Strings and add at least 5 entries
        Set < String > carOwnership = new Set < String >{'Toyota Corolla','Honda Accord 99','Honda Accord 02','Alfa Romeo 154','Nissan Patrol'};

		//Use system.debug to print out the size of your set
		system.debug('Number of cars I\'ve owned: ' + carOwnership.size());

		//Add an item to your set that already exists
		carOwnership.add('Alfa Romeo 154');

		//Use system.debug to print out the size again,  they should be the same!
		system.debug('New number of cars I\'ve owned: ' + carOwnership.size());

		// 2.  Bonus Points!  Check out the documentation on Sets. Go to the section titled List Methods. Pick one of the methods to try out and print the results to the debug log.  
		// Documentation: https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_set.htm
		//Hint:  can you print out if the set is empty?  Can you clone it?


	}

	public static void mapsReview () {

		//Time to get creative!  

		// 1. Create a new Map.  You can use whatever primitives/object types you like, as long as they make sense.
		// Try to add at least 5 Key/value pairs.


		//Now, in the debug log, print out  a list of the values.


		//Can you print out a set of the Keys?



		// 2. Bonus!  Check out the documentation on Maps. Go to the section titled Map Methods.  Manipulate the Map using one of the methods defined in the documentation
		// Documentation: https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_map.htm
		// Hint: Can you remove an entry using the key?  Can you clear out the map without deleting it?


	}
	
	// Proposed listsReveiw changes
	
	  public static void listsReview() {
        
        // 1. Create a list of Strings.  Add at least 5 entries to the list, all in one line
        List < String > bestCoffeeJoints = new List < String > { 'Matchstick', 'Musette', 'Dog & Squirrel', 'Elysian', 'Greenhorn' };
            system.debug('Coffee List size before join: ' + bestCoffeeJoints.size());
        system.debug('Coffee List before join: ' + bestCoffeeJoints);
        
        // 2. Create a second list of Strings and add 5 or more entries to this list.
        List < String > bestFoodSpots = new List < String > {'Pho Goodness', 'Nosh', 'Hungry Guys', 'Nook', 'Bella Gelato' };
            system.debug('Food List size before join: ' + bestFoodSpots.size());
        
        //3.  Bonus! Using the documentation on standard List methods from Salesforce, add the items from your first list, to your second list with one command
        // Documentation: https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_list.htm
        bestCoffeeJoints.addAll(bestFoodSpots);
        
        //bestCoffeeJoints (you were printing the bestFoodSpots in the debug so it wasnt showing the combined list!!)
        system.debug('Combined food and coffee list: ' + bestCoffeeJoints);
        system.debug('Combined food and coffee list Size should be 10, and is : ' + bestCoffeeJoints.size());
        
        //4.  Can you now loop through your combined list and print it to the debug log?  (Hint:  Check the documentation!)
        
        //need to iterate through this list- List methods do not include 'contains'- Sets have contains method and Maps have containskey
        for (String s: bestFoodSpots){
            if (s == 'Nosh') {
                System.debug (' bestFoodSpots contains Nosh and has size ' + bestFoodSpots.size());
            }
        }
        
    }

/*	public static void listsReview() {

		// 1. Create a list of Strings.  Add at least 5 entries to the list, all in one line
        List < String > bestCoffeeJoints = new List < String > { 'Matchstick', 'Musette', 'Dog & Squirrel', 'Elysian', 'Greenhorn' };
        system.debug('Coffee List size before join: ' + bestCoffeeJoints.size());

		// 2. Create a second list of Strings and add 5 or more entries to this list.
        List < String > bestFoodSpots = new List < String > {'Pho Goodness', 'Nosh', 'Hungry Guys', 'Nook', 'Bella Gelato' };
        system.debug('Food List size before join: ' + bestFoodSpots.size());
	
		//3.  Bonus! Using the documentation on standard List methods from Salesforce, add the items from your first list, to your second list with one command
		// Documentation: https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_list.htm
		bestCoffeeJoints.addAll(bestFoodSpots);
        system.debug('Combined food and coffee list size: ' + bestFoodSpots.size());
        
		//4.  Can you now loop through your combined list and print it to the debug log?  (Hint:  Check the documentation!)
		if (bestFoodSpots.contains('Nosh')) {
 	   		System.debug ('I contain Nosh and have size ' + bestFoodSpots.size());
		}
	}

*/

}
