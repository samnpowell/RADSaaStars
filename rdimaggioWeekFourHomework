//redimaggio@gmail.com
public with sharing class WeekFourHomework {
	

	public static void setsReview(){

		//Your assignment: Play with Sets!

		// 1.  Create a set of Strings and add at least 5 entries
		
      Set < String > dogBreeds = new Set < String >();
        dogBreeds.add('Poodle');
		dogBreeds.add('Labrador Retriever');
		dogBreeds.add('Australian Shepherd');
		dogBreeds.add('Shih Tzu');
		dogBreeds.add('Springer Spaniel');


	
	//Use system.debug to print out the size of your set
		
        system.debug('Size of dog Breeds Set Should be 5: ' + dogBreeds.size());
	
        system.debug('Size of dog Breeds Set Should be x: ' + dogBreeds.size());

		//Add an item to your set that already exists
		
        dogBreeds.add('Shih Tzu');

		//Use system.debug to print out the size again,  they should be the same!

        system.debug('Size of dog Breeds Set Should be x: ' + dogBreeds.size());

		// 2.  Bonus Points!  Check out the documentation on Sets. Go to the section titled List Methods. Pick one of the methods to try out and print the results to the debug log.  
		// Documentation: https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_set.htm
		//Hint:  can you print out if the set is empty?  Can you clone it?


	}

	public static void mapsReview () {

		//Time to get creative!  

		// 1. Create a new Map.  You can use whatever primitives/object types you like, as long as they make sense.
		// Try to add at least 5 Key/value pairs.
		
        Map < Integer, String > westminsterKennelClubWinners = new Map < Integer, String >();
        
    	westminsterKennelClubWinners.put(2010, 'Scottish Terrier');
    	westminsterKennelClubWinners.put(2011, 'Scottish Deerhound');
    	westminsterKennelClubWinners.put(2012, 'Pekingese');
    	westminsterKennelClubWinners.put(2013, 'Affenpinscher');
    	westminsterKennelClubWinners.put(2014, 'Fox Terrier (Wire)');
    	westminsterKennelClubWinners.put(2015, 'Beagle (15 Inch)');
    	westminsterKennelClubWinners.put(2016, 'Pointer (German Shorthaired)');

		//Now, in the debug log, print out  a list of the values.

        List <String> mapValuesList = westminsterKennelClubWinners.values();

        
         System.debug('Dog Breeds: '+mapValuesList);
                                 
		//Can you print out a set of the Keys?

		Set < Integer > mapKeysSet = westminsterKennelClubWinners.keySet();
        
    	System.debug('Year Won: ' +mapKeysSet);



		// 2. Bonus!  Check out the documentation on Maps. Go to the section titled Map Methods.  Manipulate the Map using one of the methods defined in the documentation
		// Documentation: https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_map.htm
		// Hint: Can you remove an entry using the key?  Can you clear out the map without deleting it?


	}

	public static void listsReview() {

		// 1. Create a list of Strings.  Add at least 5 entries to the list, all in one line

        List <String> dogGroups = new List <String>{'Sporting','Working','Terrier','Toy','Hound','Hearding'};

		// 2. Create a second list of Strings and add 5 or more entries to this list.
	
       List <String> breedTrait = new List <String>();
        
    	breedTrait.add('Family');
    	breedTrait.add('Guard');
    	breedTrait.add('Hypoallergenic');
    	breedTrait.add('Large');
    	breedTrait.add('Medium');
    	breedTrait.add('Small');

		//3.  Bonus! Using the documentation on standard List methods from Salesforce, add the items from your first list, to your second list with one command
		// Documentation: https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_list.htm

		//4.  Can you now loop through your combined list and print it to the debug log?  (Hint:  Check the documentation!)

 	integer counter = 0;
    	While (counter < breedTrait.size()) {
    	System.debug('List of items from combined list: ' +breedTrait[counter]);
    	counter++;
     }
    }
	}
